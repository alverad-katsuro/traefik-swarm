#######################################################
# traefik reverse proxy service for swarm mode
#######################################################

version: '3.9'

services:

  traefik:
    image: traefik:v3.0
    env_file:
      - .env
    ports:
      # Porta 80 para HTTP
      - target: 80
        published: 80
        mode: host
        protocol: tcp
      # Porta 443 para HTTPS
      - target: 443
        published: 443
        mode: host
        protocol: tcp
          #      - target: 22
          #        published: 22
          #        mode: host
          #        protocol: tcp
          #      - target: 25565
          #        published: 25565
          #        mode: host
          #        protocol: tcp

    deploy:
      mode: global
      placement:
        constraints:
          # Traefik só rodara no node que tiver a seguinte constraint visto que
          # ele também armazena o certificados SSL
          - node.labels.traefik-public.traefik-public-certificates == true
          - node.role == manager
      labels:
        # Habilita o Traefik para o container
        - traefik.enable=true
        # Usa a rede traefik-public
        - traefik.docker.network=traefik-public
        # Só aceitará containers com a label "traefik.constraint-label=traefik-public"
        # Dessa forma é possivel que existam mais que uma instancia do traefik rodando
        # se necessario apenas sendo necessaria a troca da label
        - traefik.constraint-label=traefik-public
        # Adiciona o middleware de autenticação basica
        # Fazendo uso das variaveis USERNAME e HASHED_PASSWORD
        - "traefik.http.middlewares.admin-auth.basicauth.users=${USERNAME?Variable not set}:${HASHED_PASSWORD?Variable not set}"
        # Redireciona de HTTP para HTTPS por meio do middleware https-redirect
        - traefik.http.middlewares.https-redirect.redirectscheme.scheme=https
        - traefik.http.middlewares.https-redirect.redirectscheme.permanent=true
        # Cria um router HTTP que será usado apenas para redirecionamento para HTTPS
        - traefik.http.routers.traefik-public-http.rule=Host(`${DOMAIN?Variable not set}`)
        - traefik.http.routers.traefik-public-http.entrypoints=http
        - traefik.http.routers.traefik-public-http.middlewares=https-redirect
        - traefik.http.routers.traefik-public-http.priority=10
        # Router HTTPS que servira a dashboard do traefik
        - traefik.http.routers.traefik-public-https.rule=Host(`${DOMAIN?Variable not set}`)
        - traefik.http.routers.traefik-public-https.entrypoints=https
        - traefik.http.routers.traefik-public-https.tls=true
        - traefik.http.routers.traefik-public-https.priority=10
        # Usa o serviço Traefik service api@internal para a web UI/Dashboard
        - traefik.http.routers.traefik-public-https.service=api@internal
        # Usa o Let's Encrypt para gerar certificado SSL
        - traefik.http.routers.traefik-public-https.tls.certresolver=le
        # Faz uso do middleware de autenticação basica criado acima
        - traefik.http.routers.traefik-public-https.middlewares=admin-auth
        # Define a porta interna do docker que a interface do traefik roda
        - traefik.http.services.traefik-public.loadbalancer.server.port=8080

      resources: # Limita quantidade de memoria e CPU do Traefik
        limits:
          memory: 2048M
        reservations:
          cpus: '1'
          memory: 512M
      update_config:
        order: stop-first


    volumes:
      # Monta o socket do docker como read-only para que o traefik possa observar os containers
      - /var/run/docker.sock:/var/run/docker.sock:ro
      # Monta um volume que será utilizado para o certificados SSL
      - traefik-public-certificates:/certificates
      # Monta a pasta de Logs
      - /var/log/traefik:/var/log/traefik
      # Monta a pasta de configuração dinamica
      - /home/alfredogdso/traefik-swarm/config:/etc/traefik

    environment:
      - CF_DNS_API_TOKEN=<REMOVIDO>

    networks:
      - traefik-public

volumes:
  traefik-public-certificates:

networks:
  traefik-public:
    external: true
